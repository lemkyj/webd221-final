// GRID VARIABLES & MIXINS
//------------------------------------
// http://gridcalculator.dk - grid calculator

// Change this values to change the size of the grid
// 1180px grid width
@column-width: 70;
@gutter-width: 30;
@columns: 12;

// Utility variable â€” you should never need to modify this
@gridsystem-width: (@column-width * @columns) + (@gutter-width * @columns) * 1px;

// Set @total-width to 100% for a fluid layout
// @total-width: @gridsystem-width; <---commented!!!
@total-width: 100%; // uncommented. -------makes column mixin turn into percentages


// Grid mixin
.column(@x,@columns:@columns) {
	display: inline;
	float: left;
	width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
	margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width);
}

.row(@columns:@columns) {
	display: block;
	width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
	margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
	// *width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width)-@correction;
	// *margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
	.clearfix;
}
.push(@offset:1) {
	margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.pull(@offset:1) {
	margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}

.container {
	max-width: @gridsystem-width;
	margin: 0 auto;
}


